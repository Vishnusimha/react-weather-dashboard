{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["API_KEY","process","App","city","setCity","useState","weather","setWeather","error","setError","React","createElement","className","type","placeholder","value","onChange","e","target","onClick","async","console","log","res","fetch","data","json","cod","message","err","name","description","Math","round","main","temp","src","icon","alt","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"yIAGA,MAAMA,EAAUC,mCA6DDC,MA3Df,WACE,MAAOC,EAAMC,GAAWC,mBAAS,KAC1BC,EAASC,GAAcF,mBAAS,OAChCG,EAAOC,GAAYJ,mBAAS,IA0BnC,OACEK,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAAA,UAAI,wCACJD,IAAAC,cAAA,OAAKC,UAAU,cACbF,IAAAC,cAAA,SACEE,KAAK,OACLC,YAAY,gBACZC,MAAOZ,EACPa,SAAWC,GAAMb,EAAQa,EAAEC,OAAOH,SAEpCL,IAAAC,cAAA,UAAQQ,QAlCOC,UACnB,GAAKjB,EAEL,IACEkB,QAAQC,IAAI,WAAYtB,GAExB,MAAMuB,QAAYC,2DACqCrB,wBAA2BH,KAE5EyB,QAAaF,EAAIG,OAEN,MAAbD,EAAKE,KACPlB,EAASgB,EAAKG,SACdrB,EAAW,QAEXA,EAAWkB,GACXhB,EAAS,KAEX,MAAOoB,GACPpB,EAAS,2BACTF,EAAW,SAcsB,WAGhCC,GAASE,IAAAC,cAAA,KAAGC,UAAU,SAASJ,GAE/BF,GACCI,IAAAC,cAAA,OAAKC,UAAU,gBACbF,IAAAC,cAAA,UAAKL,EAAQwB,MACbpB,IAAAC,cAAA,SAAIL,EAAQA,QAAQ,GAAGyB,aACvBrB,IAAAC,cAAA,UAAKqB,KAAKC,MAAM3B,EAAQ4B,KAAKC,MAAM,SACnCzB,IAAAC,cAAA,OACEyB,yCAA0C9B,EAAQA,QAAQ,GAAG+B,cAC7DC,IAAI,YC5CDC,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAzB,EAAA,GAAA0B,KAAAD,EAAAE,KAAA,UAAqBD,KAAKE,IAAiD,IAAhDC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASL,EACpEC,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH7C,IAAAC,cAACD,IAAM8C,WAAU,KACf9C,IAAAC,cAACT,EAAG,QAORqC","file":"static/js/main.68aa2740.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./index.css\";\n\nconst API_KEY = process.env.REACT_APP_WEATHER_API_KEY;\n\nfunction App() {\n  const [city, setCity] = useState(\"\");\n  const [weather, setWeather] = useState(null);\n  const [error, setError] = useState(\"\");\n\n  const fetchWeather = async () => {\n    if (!city) return;\n\n    try {\n      console.log(\"API KEY:\", API_KEY); // Debug\n\n      const res = await fetch(\n        `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${API_KEY}`\n      );\n      const data = await res.json();\n\n      if (data.cod !== 200) {\n        setError(data.message);\n        setWeather(null);\n      } else {\n        setWeather(data);\n        setError(\"\");\n      }\n    } catch (err) {\n      setError(\"Failed to fetch weather\");\n      setWeather(null);\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <h1>üå§Ô∏è Weather Dashboard</h1>\n      <div className=\"search-box\">\n        <input\n          type=\"text\"\n          placeholder=\"Enter city...\"\n          value={city}\n          onChange={(e) => setCity(e.target.value)}\n        />\n        <button onClick={fetchWeather}>Search</button>\n      </div>\n\n      {error && <p className=\"error\">{error}</p>}\n\n      {weather && (\n        <div className=\"weather-info\">\n          <h2>{weather.name}</h2>\n          <p>{weather.weather[0].description}</p>\n          <h3>{Math.round(weather.main.temp)}¬∞C</h3>\n          <img\n            src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`}\n            alt=\"icon\"\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}